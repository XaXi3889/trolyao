import streamlit as st
import pandas as pd
from rapidfuzz import process, fuzz

# T·∫£i d·ªØ li·ªáu t·ª´ Excel
@st.cache_data
def load_data():
    df = pd.read_excel("data.xlsx")   # ƒë·ªïi t√™n file n·∫øu kh√°c
    return df

df = load_data()

st.title("ü§ñ Tr·ª£ l√Ω ·∫£o QC C3")
st.write("Xin ch√†o, t√¥i l√† tr·ª£ l√Ω ·∫£o c·ªßa b·∫°n!")

# √î nh·∫≠p c√¢u h·ªèi
query = st.text_input("B·∫°n mu·ªën h·ªèi g√¨?")

if query:
    # L·∫•y danh s√°ch c√°c l·ªói t·ª´ file
    errors = df["TH·ªêNG K√ä L·ªñI V√Ä C√ÅCH X·ª¨ L√ù"].astype(str).tolist()

    # T√¨m k·∫øt qu·∫£ g·∫ßn gi·ªëng nh·∫•t
    best_match, score, idx = process.extractOne(
        query, errors, scorer=fuzz.token_sort_ratio
    )

    if score > 50:  # Ng∆∞·ª°ng gi·ªëng (c√≥ th·ªÉ ch·ªânh l√™n 60-70)
        st.success(f"‚úÖ T√¥i t√¨m th·∫•y k·∫øt qu·∫£ g·∫ßn nh·∫•t (ƒë·ªô gi·ªëng {score:.2f}%):")

        # L·∫•y h√†ng d·ªØ li·ªáu t∆∞∆°ng ·ª©ng
        result_row = df.iloc[idx]

        # Hi·ªÉn th·ªã ra b·∫£ng (an to√†n cho c·∫£ ƒëi·ªán tho·∫°i)
        st.write(result_row.to_frame().T)
    else:
        st.error("‚ùå Xin l·ªói, t√¥i kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£ ph√π h·ª£p.")
