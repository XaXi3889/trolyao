import streamlit as st
import pandas as pd
from rapidfuzz import process, fuzz
from pathlib import Path

EXCEL_FILE = "QCC3.xlsx"  # n·∫øu b·∫°n ƒë√£ ƒë·ªïi t√™n theo C√°ch A

st.title("ü§ñ Tr·ª£ l√Ω ·∫£o QC C3")
st.write("Xin ch√†o, t√¥i l√† tr·ª£ l√Ω ·∫£o c·ªßa b·∫°n!")

@st.cache_data(show_spinner=False)
def load_data():
    # N·∫øu EXCEL_FILE kh√¥ng t·ªìn t·∫°i, th·ª≠ t·ª± t√¨m 1 file .xlsx trong th∆∞ m·ª•c
    file_to_read = EXCEL_FILE
    if not Path(file_to_read).exists():
        xlsx_files = list(Path(".").glob("*.xlsx"))
        if not xlsx_files:
            raise FileNotFoundError("Kh√¥ng t√¨m th·∫•y file .xlsx trong repo.")
        file_to_read = xlsx_files[0].name  # d√πng file .xlsx ƒë·∫ßu ti√™n

    df = pd.read_excel(file_to_read, engine="openpyxl")
    df = df.fillna("")
    df.columns = df.columns.map(str)
    return df, file_to_read

df, using_file = load_data()
st.caption(f"ƒêang d√πng d·ªØ li·ªáu: **{using_file}**")

# G·ªôp to√†n b·ªô c·ªôt th√†nh 1 chu·ªói ƒë·ªÉ t√¨m g·∫ßn ƒë√∫ng
df["_combined_"] = df.astype(str).agg(" ".join, axis=1).str.lower()

q = st.text_input("B·∫°n mu·ªën h·ªèi g√¨?")

if q:
    q_norm = q.lower().strip()
    match, score, idx = process.extractOne(
        q_norm, df["_combined_"], scorer=fuzz.token_set_ratio
    )

    if score >= 55:  # c√≥ th·ªÉ ch·ªânh 60‚Äì70 t√πy d·ªØ li·ªáu
        st.success(f"‚úÖ K·∫øt qu·∫£ g·∫ßn nh·∫•t (ƒë·ªô gi·ªëng {score:.1f}%).")
        row = df.drop(columns=["_combined_"]).iloc[[idx]]
        # Hi·ªÉn th·ªã an to√†n tr√™n mobile
        st.write(row)
    else:
        st.error("‚ùå Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£ ph√π h·ª£p. H√£y th·ª≠ t·ª´ kh√≥a kh√°c.")
