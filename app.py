import streamlit as st
import pandas as pd
from rapidfuzz import fuzz, process   # fuzzy search

st.title("ü§ñ Tr·ª£ l√Ω ·∫£o QC C3")
st.write("Xin ch√†o, t√¥i l√† tr·ª£ l√Ω ·∫£o c·ªßa b·∫°n!")

@st.cache_data
def load_data():
    df = pd.read_excel("QCC3.xlsx", sheet_name=0)
    df = df.astype(str).apply(lambda x: x.str.lower().str.strip())
    return df

df = load_data()

question = st.text_input("B·∫°n mu·ªën h·ªèi g√¨?")

if question:
    q = question.lower().strip()

    # Gh√©p t·∫•t c·∫£ c√°c c·ªôt th√†nh 1 chu·ªói ƒë·ªÉ t√¨m
    combined = df.apply(lambda row: " ".join(row.values), axis=1)

    # L·∫•y ra k·∫øt qu·∫£ g·∫ßn nh·∫•t
    best_match = process.extractOne(q, combined, scorer=fuzz.partial_ratio)

    if best_match:
        matched_text, score, idx = best_match
        if score >= 60:   # ng∆∞·ª°ng ƒë·ªô gi·ªëng (c√≥ th·ªÉ ch·ªânh 50‚Äì70)
            st.success(f"üîé T√¥i t√¨m th·∫•y k·∫øt qu·∫£ g·∫ßn nh·∫•t (ƒë·ªô gi·ªëng {score}%):")
            st.dataframe(df.iloc[[idx]])
        else:
            st.error("Xin l·ªói, t√¥i kh√¥ng t√¨m th·∫•y th√¥ng tin ph√π h·ª£p.")
    else:
        st.error("Xin l·ªói, t√¥i kh√¥ng t√¨m th·∫•y th√¥ng tin ph√π h·ª£p.")
