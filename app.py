import streamlit as st
import pandas as pd
from rapidfuzz import process, fuzz
from pathlib import Path

EXCEL_FILE = "QCC3.xlsx"  # ƒë·ªïi t√™n file Excel th√†nh data.xlsx cho g·ªçn

st.title("ü§ñ Tr·ª£ l√Ω ·∫£o QC C3")
st.write("Xin ch√†o, t√¥i l√† tr·ª£ l√Ω ·∫£o c·ªßa b·∫°n!")

@st.cache_data(show_spinner=False)
def load_data():
    file_to_read = EXCEL_FILE
    if not Path(file_to_read).exists():
        xlsx_files = list(Path(".").glob("*.xlsx"))
        if not xlsx_files:
            raise FileNotFoundError("Kh√¥ng t√¨m th·∫•y file .xlsx trong repo.")
        file_to_read = xlsx_files[0].name
    df = pd.read_excel(file_to_read, engine="openpyxl")
    df = df.fillna("")
    df.columns = df.columns.map(str)
    return df, file_to_read

df, using_file = load_data()
st.caption(f"ƒêang d√πng d·ªØ li·ªáu: **{using_file}**")

# G·ªôp to√†n b·ªô c·ªôt ƒë·ªÉ t√¨m g·∫ßn ƒë√∫ng
df["_combined_"] = df.astype(str).agg(" ".join, axis=1).str.lower()

q = st.text_input("B·∫°n mu·ªën h·ªèi g√¨?")

if q:
    q_norm = q.lower().strip()
    match, score, idx = process.extractOne(
        q_norm, df["_combined_"], scorer=fuzz.token_set_ratio
    )

    if score >= 55:  # ng∆∞·ª°ng gi·ªëng
        st.success(f"‚úÖ T√¨m th·∫•y l·ªói g·∫ßn nh·∫•t (ƒë·ªô gi·ªëng {score:.1f}%)")

        # L·∫•y c·ªôt "C√°ch x·ª≠ l√Ω" (b·∫°n c·∫ßn ƒë√∫ng t√™n c·ªôt trong file Excel)
        if "C√°ch x·ª≠ l√Ω" in df.columns:
            cach_xu_ly = df.iloc[idx]["C√°ch x·ª≠ l√Ω"]
            st.subheader("üõ†Ô∏è C√°ch x·ª≠ l√Ω")
            st.write(cach_xu_ly if cach_xu_ly else "Ch∆∞a c√≥ h∆∞·ªõng d·∫´n x·ª≠ l√Ω.")
        else:
            st.error("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y c·ªôt 'C√°ch x·ª≠ l√Ω' trong file Excel.")
    else:
        st.error("‚ùå Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£ ph√π h·ª£p. H√£y th·ª≠ t·ª´ kh√≥a kh√°c.")
