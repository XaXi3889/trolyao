import pandas as pd
import streamlit as st
from sentence_transformers import SentenceTransformer, util

# 1. ƒê·ªçc d·ªØ li·ªáu t·ª´ Excel
file_path = "TH·ªêNG K√ä L·ªñI QCC3.xlsx"
df = pd.read_excel(file_path)

# Gh√©p d·ªØ li·ªáu m·ªói d√≤ng th√†nh 1 ƒëo·∫°n text
documents = []
for _, row in df.iterrows():
    row_text = " ".join([str(cell) for cell in row if pd.notna(cell)])
    documents.append(row_text)

# 2. T·∫°o m√¥ h√¨nh embedding (ch·∫°y offline, kh√¥ng c·∫ßn API)
model = SentenceTransformer("paraphrase-multilingual-MiniLM-L12-v2")

# Encode to√†n b·ªô d·ªØ li·ªáu th√†nh vector
doc_embeddings = model.encode(documents, convert_to_tensor=True)

# 3. Giao di·ªán Streamlit
st.set_page_config(page_title="CraneCare Assistant (Offline)", page_icon="üõ†Ô∏è", layout="centered")

st.title("üõ†Ô∏è Tr·ª£ l√Ω ·∫£o CraneCare (Offline)")
st.write("H·ªèi v·ªÅ l·ªói c·∫©u, b·∫£o d∆∞·ª°ng, s·ª≠a ch·ªØa...")

query = st.text_input("Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n:")

if query:
    query_embedding = model.encode(query, convert_to_tensor=True)
    # T√¨m c√¢u gi·ªëng nh·∫•t trong d·ªØ li·ªáu
    scores = util.cos_sim(query_embedding, doc_embeddings)[0]
    best_idx = int(scores.argmax())
    best_answer = documents[best_idx]

    st.success(best_answer)

    